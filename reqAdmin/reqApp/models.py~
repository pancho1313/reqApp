from django.db import models
from django.contrib.auth.models import User
from reqApp.choices import *

class Proyecto(models.Model):
    nombre = models.CharField(max_length=64)
    descripcion = models.CharField(max_length=140)
    
    def __unicode__(self):
        return u'%s' % self.nombre

class Bitacora(models.Model):
    nombre = models.CharField(max_length=64)
    identificador = models.PositiveIntegerField(default=1)
    descripcion = models.CharField(max_length=200)
    proyecto = models.ForeignKey(Proyecto, blank=False, null=False)
    fecha = models.DateTimeField()
    usuario = models.ForeignKey(User, null=True)
    vigencia = models.BooleanField()
    
    def __unicode__(self):
        return u'%s' % self.nombre
    
class Hito(Bitacora):
    fechaInicio = models.DateTimeField()
    fechaFin = models.DateTimeField()
    
class TipoUsuario(Bitacora):
    cantidad = models.PositiveIntegerField(default=1)
    usuariosContactables = models.CharField(max_length=140) # TODO en realidad es mejor una lista
    
class Modulo(Bitacora):
    costo = models.IntegerField(default=0, blank=True)
    
    prioridad = models.CharField(max_length=30, choices=PRIORIDAD_CHOICES)
    
    requisitosSoftware = models.ManyToManyField(RequisitoSoftware, null=True, blank=True)
    
class RequisitoUsuario(Bitacora):
    fuente = models.CharField(max_length=140)
    costo = models.IntegerField(default=0, blank=True)
    
    estabilidad = models.CharField(max_length=30, choices=ESTABILIDAD_CHOICES)
    tipo = models.CharField(max_length=30, choices=TIPO_RU_CHOICES)
    prioridad = models.CharField(max_length=30, choices=PRIORIDAD_CHOICES)
    estado = models.CharField(max_length=30, choices=ESTADO_CHOICES)
    
    tiposUsuario = models.ManyToManyField(TipoUsuario, null=True, blank=True)
    hito = models.ForeignKey(Hito, blank=False, null=False)
    
class RequisitoSoftware(Bitacora):
    fuente = models.CharField(max_length=140)
    costo = models.IntegerField(default=0, blank=True)
    
    estabilidad = models.CharField(max_length=30, choices=ESTABILIDAD_CHOICES)
    tipo = models.CharField(max_length=30, choices=TIPO_RS_CHOICES)
    prioridad = models.CharField(max_length=30, choices=PRIORIDAD_CHOICES)
    estado = models.CharField(max_length=30, choices=ESTADO_CHOICES)
    
    tiposUsuario = models.ManyToManyField(TipoUsuario, null=True, blank=True)
    requisitosUsuario = models.ManyToManyField(RequisitoUsuario, null=True, blank=True)
    hito = models.ForeignKey(Hito, blank=False, null=False)

class CasoPrueba(Bitacora):
    resultadoAceptable = models.CharField(max_length=140)
    resultadoOptimo = models.CharField(max_length=140)
    
    estado = models.CharField(max_length=30, choices=ESTADO_CHOICES)
    
    tiposUsuario = models.ManyToManyField(TipoUsuario, null=True, blank=True
    requisitoSoftware = models.ForeignKey(RequisitoSoftware, null=True, blank=True)
    requisitoUsuario = models.ForeignKey(RequisitoUsuario, null=True, blank=True)
